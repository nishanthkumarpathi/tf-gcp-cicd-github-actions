name: "Terraform Workflow"

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  checkformatting:
    name: Check the Terraform Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7

      - name: Checkout the Code
        uses: actions/checkout@v2

      - name: Check Terraform Configuration files formatting
        run: |
          cd dev
          terraform fmt -check=true
          if [ $? -ne 0 ]; then
            echo "ERROR: Terraform configuration files are not formatted correctly"
            exit 1
          fi
          echo "SUCCESS: Terraform configuration files are formatted correctly"
          exit 0
        continue-on-error: true

      - name: Next Step After Verification
        run: echo "Successfull Steps"

  terrascan_job:
    runs-on: ubuntu-latest
    name: terrascan-action
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Run Terrascan
      id: terrascan
      uses: tenable/terrascan-action@main
      with:
        iac_type: 'terraform'
        iac_version: 'v14'
        policy_type: 'gcp'
        only_warn: true
        sarif_upload: true
        #non_recursive:
        #iac_dir:
        #policy_path:
        #skip_rules:
        #config_path:
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: terrascan.sarif

  devdeployment:
    name: Deploy to Dev Environment
    needs: [checkformatting, terrascan_job]
    runs-on: ubuntu-latest

    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7

      - name: Checkout the Code
        uses: actions/checkout@v2

      - name: Terraform Init
        run: |
          cd dev
          terraform init

      - name: Terraform Validate
        run: |
          cd dev
          terraform validate

      - name: Terraform Plan
        run: |
          cd dev
          terraform plan -out=plan.out

      - name: Upload the Artifact
        uses: actions/upload-artifact@v2
        with:
          name: plan
          path: dev/plan.out

      - name: Terraform Auto Apply
        run: |
          echo "switch directory"
          cd dev
          terraform apply -auto-approve

      

